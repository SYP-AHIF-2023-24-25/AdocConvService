@use '../var' as var;

/**
 * MIXIN: Responsive Media Queries.
 *
 * Creates responsive media queries for seven different screen sizes.
 * These are based on min-width which means if x is the size then your
 * CSS will affect any device with screen width x and above.
 *
 * USAGE:
 *	@include r-min(240)  { }
 *	@include r-min(320)  { }
 *	@include r-min(480)  { }
 *	@include r-min(640)  { }
 *	@include r-min(768)  { }
 *	@include r-min(1024) { }
 *	@include r-min(1140) { }
 *	@include r-min(1280) { }
 *  @include r-min(1500) { }
 *
 * CSS content goes inside {} brackets. These mixins should be used inside
 * a class definition. For example:
 *
 * The following CSS will hide the .header on screen width 320px and above.
 * .header {
 * 	  @include r-min(320)  { display: none; }
 * }
 *
 * @author Ahmad Awais (https://github.com/ahmadawais)
 */
@mixin r-min($point) {
  @if $point==var.$window-3xsmall {
    @media (min-width: var.$window-3xsmall) {
      @content;
    }
  }
  @if $point==var.$window-2xsmall {
    @media (min-width: var.$window-2xsmall) {
      @content;
    }
  }
  @if $point==var.$window-xsmall {
    @media (min-width: var.$window-xsmall) {
      @content;
    }
  }
  @if $point==var.$window-small {
    @media (min-width: var.$window-small) {
      @content;
    }
  }
  @if $point==var.$window-medium {
    @media (min-width: var.$window-medium) {
      @content;
    }
  }
  @if $point==var.$window-xmedium {
    @media (min-width: var.$window-xmedium) {
      @content;
    }
  }
  @if $point==var.$window-large {
    @media (min-width: var.$window-large) {
      @content;
    }
  }
  @if $point==var.$window-xlarge {
    @media (min-width: var.$window-xlarge) {
      @content;
    }
  }
  @if $point==var.$window-2xlarge {
    @media (min-width: var.$window-2xlarge) {
      @content;
    }
  }
}

/**
 * DEPRECATED - Use r-min instead. This is only used for compatibility for existing SCSS
 */
@mixin r-max($point) {
  @if $point==var.$window-3xsmall {
    @media (max-width: var.$window-3xsmall) {
      @content;
    }
  }
  @if $point==var.$window-2xsmall {
    @media (max-width: var.$window-2xsmall) {
      @content;
    }
  }
  @if $point==var.$window-xsmall {
    @media (max-width: var.$window-xsmall) {
      @content;
    }
  }
  @if $point==var.$window-small {
    @media (max-width: var.$window-small) {
      @content;
    }
  }
  @if $point==var.$window-medium {
    @media (max-width: var.$window-medium) {
      @content;
    }
  }
  @if $point==var.$window-xmedium {
    @media (max-width: var.$window-xmedium) {
      @content;
    }
  }
  @if $point==var.$window-large {
    @media (max-width: var.$window-large) {
      @content;
    }
  }
  @if $point==var.$window-xlarge {
    @media (max-width: var.$window-xlarge) {
      @content;
    }
  }
  @if $point==var.$window-2xlarge {
    @media (max-width: var.$window-2xlarge) {
      @content;
    }
  }
}
